neville([] x, [] y, xConst) {
    [][] matrix = [x.length - 1][x.length - 1];
    count = 0;
    countXPointer = 0;
    for (j = 0; j < matrix[0].length; j++) {
        for (i = count; i < matrix.length; i++) {
            if (j == 0) {
                matrix[i][j] = calculate(xConst, x[i], x[i + 1], y[i + 1], y[i]);
            } else {
                matrix[i][j] = calculate(xConst, x[countXPointer],x[countXPointer+j+1], matrix[i][j-1], matrix[i-1][j-1]);
                countXPointer++;
            }
        }
        count++;
        countXPointer = 0;
    }
    return matrix;
}

calculate(x, xiPrev, xi, pi, pil1) {
    return (((x - xiPrev) * pi) - ((x - xi) * pil1)) / (xi - xiPrev);
}
