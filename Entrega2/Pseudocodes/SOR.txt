Read A, b, x0, iter, tol, lamda			
	n = length(A)
	cont = 0				
	e = tol + 1				
	while e > tol, cont <= iter do				
		e = 0			
		for i = 1 to n do			
			sum = 0		
			for j = 1 to n do		
				if i != j 	
					x[i] = lamda*((b[i] - suma)/A[i,i]) + (1-lamda)*x0[i]
				endIf	
			endFor		
			x[i] = (b[i] - sum) / A[i][i]		
			aux = x[i] - x0[i]		
			e = e + (aux^2)		
			x0[i] = x[i]		
		endFor			
		e = e^0.5			
		cont = cont + 1			
	endWhile
	if e < tol
		retunr x
	else
		pritn Can not find a solution in n iterations
	endIf	

    D = diagonal(A)
    U = -triangular Upper(A) * lamda
    L = -triangular Lower(A) * lamda
    T = inverse(D-L) * ((1-lamda) * D+U)
    C = lamda *inverse(D-L) * b

    print T
    print C